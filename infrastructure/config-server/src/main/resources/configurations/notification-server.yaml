spring:
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: notification-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SMTP_USERNAME}
    password: ${SMTP_PASSWORD}
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true
        starttls:
          enable: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000
server:
  port: 2222

# Logging Configuration
logging:
  level:
    root: INFO
    # Spring Framework
    org.springframework: INFO
    org.springframework.kafka: INFO
    # Kafka Client (consumer/producer) - keep at INFO
    org.apache.kafka.clients: INFO
    # Kafka Broker Internals - SUPPRESS these logs
    org.apache.kafka.common.utils: WARN
    org.apache.kafka.coordinator: WARN
    org.apache.kafka.log: WARN
    org.apache.kafka.server: WARN
    kafka.coordinator.group.GroupMetadataManager: WARN
    kafka.log.LogManager: WARN
    kafka.server: WARN
    kafka.cluster: WARN
    kafka.controller: WARN
    state.change.logger: WARN
    # Application specific
    com.azsumtoshko.notification_server: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/infrastructure/notification-server/application.log

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: prometheus,health,info,env,metrics,trace,loggers,httptrace
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true